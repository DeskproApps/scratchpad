name: Branch Build

on:
  push:
    branches:
      - master

jobs:
  deskpro_app_test_and_build:
    name: Test / Build
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --no-tags --depth=1 origin master

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn tsc --noemit

      #      - name: Run tests
      #        run: yarn test:coverage

      - name: Build
        run: yarn build

      - name: Package app zip
        working-directory: dist
        run: |
          zip -rq ../app.zip *
          mv ../app.zip .

      - name: Read manifest
        id: read_manifest
        run: |
          content=`cat ./manifest.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=manifest::$content"

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ fromJson(steps.read_manifest.outputs.manifest).version }}
          draft: false
          prerelease: false
          files: |
            ./dist/${{ steps.create_package_filename.outputs.packageFilename }}.zip
            ./dist/manifest.json

      - name: Register release with apps registry
        id: register_with_apps_registry
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://apps.deskpro-service.com/register"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "x-api-key": "${{ secrets.APP_REGISTRY_KEY }}"}'
          data: '{"repositoryUrl": "${{ github.server_url }}/${{ github.repository }}", "type": "github"}'

      - name: Trigger release
        id: trigger_release
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://apps.deskpro-service.com/release"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "x-api-key": "${{ secrets.APP_REGISTRY_KEY }}"}'
          data: '{"repositoryUrl": "${{ github.server_url }}/${{ github.repository }}"}'
